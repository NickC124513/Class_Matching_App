scalar Point
scalar DateTime
scalar PointInput

type Student {
  nuid: Int!
  first_name: String!
  last_name: String!
}
type Course {
  course_name: String!
  course_id: String!
}

type CourseCount @exclude {
  course: String!
  studentCount: Int!
}

type Query {
  classes: String! @cypher(statement:"MATCH (p:Person)-[r:IS_ENROLLED_IN]->(c:Course) WHERE p.nuid = 50582116 WITH collect(c.course_id) as list RETURN apoc.text.join(list, ', ') as string")
  friendCount: Int! @cypher(statement:"MATCH (person:Person)-[r:IS_FRIENDS_WITH]->(friend:Person) WHERE person.nuid = 50582116 RETURN count(friend)")
  userCount: Int! @cypher(statement: "MATCH (p:Person) RETURN COUNT(p)")
  courseCount: [CourseCount]
    @cypher(
      statement: "MATCH (c:Course)-[r:INCLUDES_STUDENT]->(p:Person)RETURN {course: c.course_id, studentCount: count(p)}"
    )
}
